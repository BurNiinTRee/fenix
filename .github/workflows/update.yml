name: update

on:
  schedule:
    - cron: "0 2 * * *"

jobs:
  update:
    name: update
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Install nix
        uses: cachix/install-nix-action@v13
        with:
          install_url: https://github.com/numtide/nix-unstable-installer/releases/latest/download/install
          nix_path: nixpkgs=channel:nixpkgs-unstable
          extra_nix_config: experimental-features = flakes nix-command

      - name: Set up cachix
        uses: cachix/cachix-action@v10
        with:
          name: nix-community
          signingKey: ${{ secrets.CACHIX_SIGNING_KEY }}

      - name: Update everything
        run: |
          git config --local user.name "github-actions"
          git config --local user.email "action@github.com"

          nix-shell --run ./update -p "python3.withPackages (ps: [ ps.toml ])"
          if [ -n "$(git diff)" ]; then
            git commit -am "update toolchains"
          fi

          nix flake update --commit-lock-file

          curl -fLSso data/rust-analyzer-vsix.zip \
            https://github.com/rust-analyzer/rust-analyzer/releases/download/nightly/rust-analyzer.vsix || true
          if [ -n "$(git diff)" ]; then
            git commit -am "update rust analyzer vscode extension"
          fi

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ github.token }}
          branch: main

      - name: Build with nix
        run: |
          pkgs=(.#{{minimal,default,complete,latest}.toolchain,{stable,beta}.{minimal,default,complete}Toolchain,rust-analyzer{,-vscode-extension}})
          nix build "${pkgs[@]}"
          nix build --override-input \
            nixpkgs github:nixos/nixpkgs/nixpkgs-unstable "${pkgs[@]}"
